global:
  imageRegistry: ""
  imagePullSecrets:
    - docker-registry-secret

## PVC configuration
##
persistence:
  accessMode: ReadWriteOnce
  size: 1Gi

## MySQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/mysql/values.yaml
##
mysql:
  ## MySQL Authentication parameters
  auth:
    ## @param mysql.auth.rootPassword MySQL root password
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mysql#setting-the-root-password-on-first-run
    rootPassword: ""
    ## @param mysql.auth.database MySQL custom database
    ## ref: https://github.com/bitnami/containers/blob/main/bitnami/mysql/README.md#creating-a-database-on-first-run
    database: fineract_tenants
    ## @param mysql.auth.username MySQL custom user name
    ## ref: https://github.com/bitnami/containers/blob/main/bitnami/mysql/README.md#creating-a-database-user-on-first-run
    username: fineract
    ## @param mysql.auth.password MySQL custom user password
    password: ""
  ## MySQL primary container's resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param primary.resources.limits The resources limits for MySQL primary containers
  ## @param primary.resources.requests The requested resources for MySQL primary containers
  ##
  primary:
    configuration: |-
      [mysqld]
      default_authentication_plugin=mysql_native_password
      authentication_policy='{{- .Values.auth.authenticationPolicy | default "* ,," }}'
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port={{ .Values.primary.containerPorts.mysql }}
      mysqlx={{ ternary 1 0 .Values.primary.enableMySQLX }}
      mysqlx_port={{ .Values.primary.containerPorts.mysqlx }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      slow_query_log=0
      long_query_time=10.0
      sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION

      [client]
      port={{ .Values.primary.containerPorts.mysql }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin

      [manager]
      port={{ .Values.primary.containerPorts.mysql }}
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

    containerPorts:
      mysql: 3306
      mysqlx: 33060

    enableMySQLX: false

    resources:
      limits: {}
      requests: {}

auth:
  authenticationPolicy: ""

## Tenant configuration
##
tenant:
  ## @param tenant.connectionParams Tenant connection parameters
  connectionParams: ""
  ## @param tenant.name Tenant name
  name: "Default Tenant"
  ## @param tenant.timezone Tenant timezone
  timezone: "Africa/Nairobi"

## Ingress configuration
##
ingress:
  hostname: ""

## Server resource requests and limits
server:
  ssl:
    enabled: false
  port: 8080
  image:
    name: truehostcloud/fineract
    tag: e4bc76
  resources:
    limits: {}
    requests: {}

## Client resource requests and limits
client:
  resources:
    limits: {}
    requests: {}
  image:
    name: truehostcloud/mifos-web-app
    tag: aecbae

## Self Service configuration
selfService:
  resources:
    limits: {}
    requests: {}
  image:
    name: truehostcloud/mifos-self-service
    tag: 411297
  port: 8090
  basePath: /self-service
  probes:
    initialDelaySeconds: 5
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 6

elasticApm:
  agentPath: /app/elastic-apm/elastic-apm-agent-1.52.1.jar
  serverUrl: https://apm.jisort.com
  environment: production
  applicationPackages: org.apache.fineract
  traceMethods: org.apache.fineract.*,com.acme.fineract.*

